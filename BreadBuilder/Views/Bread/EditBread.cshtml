@model BreadBuilder.ViewModels.EditBreadViewModel

@{
    ViewData["Title"] = "EditBread";
}

<h2>Edit Bread</h2>

@* 
    TODO: CLIENT SIDE VALIDATION
*@
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditBread" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <h2><input value="@Model.Name" asp-for="Name" /></h2>
                <hr />

                <h3><b>Ingredients</b></h3>
                <hr />
                <table class="table table-bordered">
                    <tr>
                        <th>Name</th>
                        <th>Value</th>
                        <th>Unit</th>
                    </tr>
                    
                    @for (var i = 0; i < Model.RecipeItems.Count; i++)
                    {

                        <tr>


                            <td><input value="@Model.RecipeItems[i].RecipeIngredient.Name" asp-for="RecipeItems[i].RecipeIngredient.Name" /></td>

                            <td><input value="@Model.RecipeItems[i].RecipeMeasurement.Value" asp-for="RecipeItems[i].RecipeMeasurement.Value" /></td>

                            <td>@Model.RecipeItems[i].RecipeMeasurement.Unit</td>


                        </tr>

                    }

                </table>
                <hr />

                <h3><b>Instructions</b></h3>
                <textarea rows="20" cols="50" asp-for="Instructions">@Model.Instructions</textarea>
                @Html.HiddenFor(Model => Model.ID)

                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
